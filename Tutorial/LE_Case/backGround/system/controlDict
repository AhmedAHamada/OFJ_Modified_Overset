/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

libs            ("liboverset.so");

application     overPimpleDyMFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;
//stopAt	writeNow;

endTime         25;

deltaT          1e-3;

writeControl    adjustable;

writeInterval   0.1;

purgeWrite      0;

writeFormat     binary;

writePrecision  10;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

adjustTimeStep  yes;
maxCo           0.5;
maxDeltaT       0.01;

// ************************************************************************* //



functions
{

///////////////////////////////////////////////////////////////////////////
    /*inMassFlow
    {
        type            surfaceFieldValue;

        libs ("libfieldFunctionObjects.so");
        enabled         true;

	writeControl   timeStep;
	writeInterval  1;

        log             true;

        writeFields     false;

        regionType          patch;
        name      inlet;

	operation       sum;
        fields
        (
            phi
        );
    }*/
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
    /*outMassFlow
    {
        type            surfaceFieldValue;

        libs ("libfieldFunctionObjects.so");
        enabled         true;

	writeControl   timeStep;
	writeInterval  1;

        log             yes;

        writeFields     false;

        regionType          patch;
        name      outlet;

	operation       sum;
        fields
        (
            phi
        );
    }*/
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////

    /*fieldAverage
    {
        type            fieldAverage;
        libs ("libfieldFunctionObjects.so");
        enabled        false;
        writeControl   outputTime;

	//writeControl   timeStep;
	//writeInterval  100;

	//cleanRestart true;

	//timeStart       20;
	//timeEnd         200;

        fields
        (
            U
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

            p
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
        );
    }*/

///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////

    forces_object
    {
	type forces;
	libs ("libforces.so");

	//writeControl outputTime;
	writeControl   timeStep;
	writeInterval  100;

	//// Patches to sample
	//patches ("body1" "body2" "body3");
	patches ("wing");

	//// Name of fields
	pName p;
	Uname U;

	//// Density
	rho rhoInf;
	rhoInf 1.225;

	//// Centre of rotation
	CofR (0 0 0);
    }

///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////

    forceCoeffs_object
    {
	// rhoInf - reference density
	// CofR - Centre of rotation
	// dragDir - Direction of drag coefficient
	// liftDir - Direction of lift coefficient
	// pitchAxis - Pitching moment axis
	// magUinf - free stream velocity magnitude
	// lRef - reference length
	// Aref - reference area
	type forceCoeffs;
	libs ("libforces.so");
	//patches ("body1" "body2" "body3");
	patches (wing);

	pName p;
	Uname U;
	rho rhoInf;
	rhoInf 1.225;

	//// Dump to file
	log true;

	CofR (0.0 0 0);
	liftDir (-0.173648 0.984807 0);
	dragDir (0.984807 0.173648 0);
	pitchAxis (0 0 1);
	magUInf 14.6;
	lRef 1.0;         // reference lenght for moments!!!
	Aref 1.0;	//2.0;         // reference area 1 for 2d

        writeControl   timeStep;
        writeInterval  10;
    }

///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////

    /*minmaxdomain
    {
	type fieldMinMax;
	//type banana;

	libs ("libfieldFunctionObjects.so");

	enabled true;

	mode component;

	writeControl timeStep;
	writeInterval 1;

	log true;

	fields (p U k epsilon omega nut);
    }*/

///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
/*    yplus
    {
    	type yPlus;
    	functionObjectLibs ("libutilityFunctionObjects.so");
    	enabled true;
        writeControl outputTime;

	//writeControl timeStep;
	//writeInterval 1;
    }*/
///////////////////////////////////////////////////////////////////////////

};

